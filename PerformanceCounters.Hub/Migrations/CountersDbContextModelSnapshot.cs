// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PerformanceCounters.Hub.EF;

#nullable disable

namespace PerformanceCounters.Hub.Migrations
{
    [DbContext(typeof(CountersDbContext))]
    partial class CountersDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PerformanceCounters.Hub.EF.Entity.CounterEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcessEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValueJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProcessEntityId");

                    b.ToTable("Counter");
                });

            modelBuilder.Entity("PerformanceCounters.Hub.EF.Entity.DeviceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Device");
                });

            modelBuilder.Entity("PerformanceCounters.Hub.EF.Entity.ProcessEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeviceEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DeviceEntityId");

                    b.HasIndex("Id", "Name")
                        .IsUnique();

                    b.ToTable("Process");
                });

            modelBuilder.Entity("PerformanceCounters.Hub.EF.Entity.CounterEntity", b =>
                {
                    b.HasOne("PerformanceCounters.Hub.EF.Entity.ProcessEntity", null)
                        .WithMany("Counters")
                        .HasForeignKey("ProcessEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PerformanceCounters.Hub.EF.Entity.ProcessEntity", b =>
                {
                    b.HasOne("PerformanceCounters.Hub.EF.Entity.DeviceEntity", null)
                        .WithMany("Processes")
                        .HasForeignKey("DeviceEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PerformanceCounters.Hub.EF.Entity.DeviceEntity", b =>
                {
                    b.Navigation("Processes");
                });

            modelBuilder.Entity("PerformanceCounters.Hub.EF.Entity.ProcessEntity", b =>
                {
                    b.Navigation("Counters");
                });
#pragma warning restore 612, 618
        }
    }
}
